import numpy as np

symb_bpsk = [-1,1]
symb_4pam = [-1,-1/3,1/3,1]
symb_8pam = 2/7*np.arange(8) - 1

symb_star8qam = [-(1+np.sqrt(3))/2-1j*(1+np.sqrt(3))/2,-(1+np.sqrt(3))/2+1j*(1+np.sqrt(3))/2,-1,-1j,1j,1,(1+np.sqrt(3))/2-1j*(1+np.sqrt(3))/2,(1+np.sqrt(3))/2+1j*(1+np.sqrt(3))/2]
symb_star8qam_spooner = np.array(symb_star8qam) * np.exp(1j*2*np.pi/8)
symb_8qam_spooner = [-1,1,1j,-1j,1+1j,1-1j,-1-1j,-1+1j]

symb_32qam_spooner = np.array([-5-3j, -5-1j, -5+1j, -5+3j, -3-5j, -3-3j, -3-1j, -3+1j,
              -3+3j, -3+5j, -1-5j, -1-3j, -1-1j, -1+1j, -1+3j, -1+5j,
              1-5j, 1-3j, 1-1j, 1+1j, 1+3j, 1+5j, 3-5j, 3-3j, 3-1j,
              3+1j, 3+3j, 3+5j, 5-3j, 5-1j, 5+1j, 5+3j])
symb_128qam_spooner = np.array([-11-7j, -11-5j, -11-3j, -11-1j, -11+1j, -11+3j, -11+5j,
              -11+7j, -9-7j, -9-5j, -9-3j, -9-1j, -9+1j, -9+3j, -9+5j, 
              -9+7j, -7-11j, -7-9j, -7-7j, -7-5j, -7-3j, -7-1j, -7+1j,
              -7+3j, -7+5j, -7+7j, -7+9j, -7+11j, -5-11j, -5-9j, -5-7j,
              -5-5j, -5-3j, -5-1j, -5+1j, -5+3j, -5+5j, -5+7j, -5+9j,
              -5+11j, -3-11j, -3-9j, -3-7j, -3-5j, -3-3j, -3-1j, -3+1j,
              -3+3j, -3+5j, -3+7j, -3+9j, -3+11j, -1-11j, -1-9j, -1-7j,
              -1-5j, -1-3j, -1-1j, -1+1j, -1+3j, -1+5j, -1+7j, -1+9j,
              -1+11j, 1-11j, 1-9j, 1-7j, 1-5j, 1-3j, 1-1j, 1+1j, 1+3j,
              1+5j, 1+7j, 1+9j, 1+11j, 3-11j, 3-9j, 3-7j, 3-5j, 3-3j,
              3-1j, 3+1j, 3+3j, 3+5j, 3+7j, 3+9j, 3+11j, 5-11j, 5-9j,
              5-7j, 5-5j, 5-3j, 5-1j, 5+1j, 5+3j, 5+5j, 5+7j, 5+9j,
              5+11j, 7-11j, 7-9j, 7-7j, 7-5j, 7-3j, 7-1j, 7+1j, 7+3j,
              7+5j, 7+7j, 7+9j, 7+11j, 9-7j, 9-5j, 9-3j, 9-1j, 9+1j,
              9+3j, 9+5j, 9+7j, 11-7j, 11-5j, 11-3j, 11-1j, 11+1j, 11+3j,
              11+5j, 11+7j])
symb_512qam_spooner = np.array([-23-15j,-23-13j,-23-11j,-23-9j,-23-7j,-23-5j,-23-3j,-23-1j,-23+1j,-23+3j,-23+5j,-23+7j,-23+9j,-23+11j,-23+13j,-23+15j,-21-15j,-21-13j,-21-11j,-21-9j,-21-7j,-21-5j,-21-3j,-21-1j,-21+1j,-21+3j,-21+5j,-21+7j,-21+9j,-21+11j,-21+13j,-21+15j,-19-15j,-19-13j,-19-11j,-19-9j,-19-7j,-19-5j,-19-3j,-19-1j,-19+1j,-19+3j,-19+5j,-19+7j,-19+9j,-19+11j,-19+13j,-19+15j,-17-15j,-17-13j,-17-11j,-17-9j,-17-7j,-17-5j,-17-3j,-17-1j,-17+1j,-17+3j,-17+5j,-17+7j,-17+9j,-17+11j,-17+13j,-17+15j,-15-23j,-15-21j,-15-19j,-15-17j,-15-15j,-15-13j,-15-11j,-15-9j,-15-7j,-15-5j,-15-3j,-15-1j,-15+1j,-15+3j,-15+5j,-15+7j,-15+9j,-15+11j,-15+13j,-15+15j,-15+17j,-15+19j,-15+21j,-15+23j,-13-23j,-13-21j,-13-19j,-13-17j,-13-15j,-13-13j,-13-11j,-13-9j,-13-7j,-13-5j,-13-3j,-13-1j,-13+1j,-13+3j,-13+5j,-13+7j,-13+9j,-13+11j,-13+13j,-13+15j,-13+17j,-13+19j,-13+21j,-13+23j,-11-23j,-11-21j,-11-19j,-11-17j,-11-15j,-11-13j,-11-11j,-11-9j,-11-7j,-11-5j,-11-3j,-11-1j,-11+1j,-11+3j,-11+5j,-11+7j,-11+9j,-11+11j,-11+13j,-11+15j,-11+17j,-11+19j,-11+21j,-11+23j,-9-23j,-9-21j,-9-19j,-9-17j,-9-15j,-9-13j,-9-11j,-9-9j,-9-7j,-9-5j,-9-3j,-9-1j,-9+1j,-9+3j,-9+5j,-9+7j,-9+9j,-9+11j,-9+13j,-9+15j,-9+17j,-9+19j,-9+21j,-9+23j,-7-23j,-7-21j,-7-19j,-7-17j,-7-15j,-7-13j,-7-11j,-7-9j,-7-7j,-7-5j,-7-3j,-7-1j,-7+1j,-7+3j,-7+5j,-7+7j,-7+9j,-7+11j,-7+13j,-7+15j,-7+17j,-7+19j,-7+21j,-7+23j,-5-23j,-5-21j,-5-19j,-5-17j,-5-15j,-5-13j,-5-11j,-5-9j,-5-7j,-5-5j,-5-3j,-5-1j,-5+1j,-5+3j,-5+5j,-5+7j,-5+9j,-5+11j,-5+13j,-5+15j,-5+17j,-5+19j,-5+21j,-5+23j,-3-23j,-3-21j,-3-19j,-3-17j,-3-15j,-3-13j,-3-11j,-3-9j,-3-7j,-3-5j,-3-3j,-3-1j,-3+1j,-3+3j,-3+5j,-3+7j,-3+9j,-3+11j,-3+13j,-3+15j,-3+17j,-3+19j,-3+21j,-3+23j,-1-23j,-1-21j,-1-19j,-1-17j,-1-15j,-1-13j,-1-11j,-1-9j,-1-7j,-1-5j,-1-3j,-1-1j,-1+1j,-1+3j,-1+5j,-1+7j,-1+9j,-1+11j,-1+13j,-1+15j,-1+17j,-1+19j,-1+21j,-1+23j,1-23j,1-21j,1-19j,1-17j,1-15j,1-13j,1-11j,1-9j,1-7j,1-5j,1-3j,1-1j,1+1j,1+3j,1+5j,1+7j,1+9j,1+11j,1+13j,1+15j,1+17j,1+19j,1+21j,1+23j,3-23j,3-21j,3-19j,3-17j,3-15j,3-13j,3-11j,3-9j,3-7j,3-5j,3-3j,3-1j,3+1j,3+3j,3+5j,3+7j,3+9j,3+11j,3+13j,3+15j,3+17j,3+19j,3+21j,3+23j,5-23j,5-21j,5-19j,5-17j,5-15j,5-13j,5-11j,5-9j,5-7j,5-5j,5-3j,5-1j,5+1j,5+3j,5+5j,5+7j,5+9j,5+11j,5+13j,5+15j,5+17j,5+19j,5+21j,5+23j,7-23j,7-21j,7-19j,7-17j,7-15j,7-13j,7-11j,7-9j,7-7j,7-5j,7-3j,7-1j,7+1j,7+3j,7+5j,7+7j,7+9j,7+11j,7+13j,7+15j,7+17j,7+19j,7+21j,7+23j,9-23j,9-21j,9-19j,9-17j,9-15j,9-13j,9-11j,9-9j,9-7j,9-5j,9-3j,9-1j,9+1j,9+3j,9+5j,9+7j,9+9j,9+11j,9+13j,9+15j,9+17j,9+19j,9+21j,9+23j,11-23j,11-21j,11-19j,11-17j,11-15j,11-13j,11-11j,11-9j,11-7j,11-5j,11-3j,11-1j,11+1j,11+3j,11+5j,11+7j,11+9j,11+11j,11+13j,11+15j,11+17j,11+19j,11+21j,11+23j,13-23j,13-21j,13-19j,13-17j,13-15j,13-13j,13-11j,13-9j,13-7j,13-5j,13-3j,13-1j,13+1j,13+3j,13+5j,13+7j,13+9j,13+11j,13+13j,13+15j,13+17j,13+19j,13+21j,13+23j,15-23j,15-21j,15-19j,15-17j,15-15j,15-13j,15-11j,15-9j,15-7j,15-5j,15-3j,15-1j,15+1j,15+3j,15+5j,15+7j,15+9j,15+11j,15+13j,15+15j,15+17j,15+19j,15+21j,15+23j,17-15j,17-13j,17-11j,17-9j,17-7j,17-5j,17-3j,17-1j,17+1j,17+3j,17+5j,17+7j,17+9j,17+11j,17+13j,17+15j,19-15j,19-13j,19-11j,19-9j,19-7j,19-5j,19-3j,19-1j,19+1j,19+3j,19+5j,19+7j,19+9j,19+11j,19+13j,19+15j,21-15j,21-13j,21-11j,21-9j,21-7j,21-5j,21-3j,21-1j,21+1j,21+3j,21+5j,21+7j,21+9j,21+11j,21+13j,21+15j,23-15j,23-13j,23-11j,23-9j,23-7j,23-5j,23-3j,23-1j,23+1j,23+3j,23+5j,23+7j,23+9j,23+11j,23+13j,23+15j])

M = 16
X = np.arange(1 - np.sqrt(M), np.sqrt(M), 2)
I, Q = np.meshgrid(X, X)
c = I + 1j * Q
symb_16qam = np.flipud(c)

M = 64
X = np.arange(1 - np.sqrt(M), np.sqrt(M), 2)
I, Q = np.meshgrid(X, X)
c = I + 1j * Q
symb_64qam = np.flipud(c)

M = 64
X = np.arange(1 - np.sqrt(M), np.sqrt(M), 2)
I, Q = np.meshgrid(X, X)
c = I + 1j * Q
symb_64qam = np.flipud(c)

M = 256
X = np.arange(1 - np.sqrt(M), np.sqrt(M), 2)
I, Q = np.meshgrid(X, X)
c = I + 1j * Q
symb_256qam = np.flipud(c)

M = 1024
X = np.arange(1 - np.sqrt(M), np.sqrt(M), 2)
I, Q = np.meshgrid(X, X)
c = I + 1j * Q
symb_1024qam = np.flipud(c)

symb_circ16qam_spooner1 = [2.414213562373095+1j, 1+2.414213562373095j, -1+2.414213562373095j, -2.414213562373095+1j, -2.414213562373095-1j, -1-2.414213562373095j, 1-2.414213562373095j, 2.414213562373095-1j,4.146264369941973+0j, 2.9318516525781364+2.9318516525781364j, 0+4.146264369941973j, -2.9318516525781364+2.9318516525781364j, -4.146264369941973+0j, -2.9318516525781364-2.9318516525781364j, 0-4.146264369941973j,2.9318516525781364-2.9318516525781364j]


symb_4qam = [-1j, 1j, -1, 1]

symb_qpsk = [-1-1j,-1+1j,1-1j,1+1j]/np.sqrt(2)
symb_8psk = [np.sqrt(2),1+1j,1j*np.sqrt(2),-1+1j,-np.sqrt(2),-1-1j,-1j*np.sqrt(2),1-1j]
symb_16psk = np.exp(1j*np.arange(16)/16*2*np.pi)